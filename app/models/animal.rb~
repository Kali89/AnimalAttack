# == Schema Information
#
# Table name: animals
#
#  id                      :integer          not null, primary key
#  name                    :string(255)
#  blurb                   :string(255)
#  rating                  :integer
#  created_at              :datetime         not null
#  updated_at              :datetime         not null
#  attachment_file_name    :string(255)
#  attachment_content_type :string(255)
#  attachment_file_size    :integer
#  attachment_updated_at   :datetime
#
class Animal < ActiveRecord::Base
	default_scope :order => "rating DESC"
	attr_protected :id
  #attr_accessible :blurb, :name, :rating
	has_attached_file :attachment,
		:styles => {
			:thumb => "100x100!",
			:small => "150x150>",
			:medium => "300x300>",
			:large =>  "x600" },
		:path => ":attachment/:id/:style.:extension",
		:bucket => 'animalattack2'
	def file_dimensions
		dimensions = Paperclip::Geometry.from_file(file.queued_for_write[:attachment].path)
		self.width = dimensions.width
		self.height = dimensions.height
		if dimensions.width < 100 && dimensions.height < 100
			errors.add(:file, 'Image width or height must be at least 100px')
		end
	end
	before_save { |animal| animal.name = name.downcase }
	validates :name, presence: true, uniqueness: { case_sensitive: false }
	validates :rating, presence: true
	validates_attachment :attachment, presence: true
	validate :file_dimensions
	validates_attachment_size :attachment, :less_than => 25.megabytes
end
